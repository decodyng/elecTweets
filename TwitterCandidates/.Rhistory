shapiro.test(model1H$residuals)
bptest(model1H)
model2aH <- lm(hhAccount~hhTotalSQ+inside+hhTotalSQ*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model2H)
model2aH <- lm(hhAccount~hhTotalSQ+inside+hhTotalSQ*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model2H)
model2aH <- lm(hhAccount~hhTotalSQ+inside+hhTotalSQ*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model2aH)
bptest(model2aH)
shapiro.test(model2aH$residuals)
shapiro.test(model1H$residuals)
model3H <- lm(logAccounts ~ hhTotal+inside+hhTotal*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model3H)
bptest(model3H)
shapiro.test(model3H$residuals)
model3aH <- lm(sqrt(hhAccounts) ~ hhTotal+inside+hhTotal*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
model3aH <- lm(sqrt(hhAccounts) ~ hhTotal+inside+hhTotal*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
model3aH <- lm(sqrt(hhAccount) ~ hhTotal+inside+hhTotal*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model3aH)
bp(model3aH)
bptest(model3aH)
shapiro.test(model3aH$residuals)
summary(model3aH)
model3aH <- lm(sqrt(hhAccount) ~ hhTotal+inside+hhTotal*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model3aH)
bptest(model3aH)
shapiro.test(model3aH$residuals)
model3bH <- lm(hhAccount^.25 ~ hhTotal+inside+hhTotal*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model3bH)
summary(model3aH)
bptest(model3bH)
bptest(model3aH)
bptest(model3bH)
shapiro.test(model3bH$residuals)
bptest(model3aH)
model3aH <- lm(sqrt(hhAccount) ~ hhTotal^2+inside+hhTotal^2*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
model3bH <- lm(sqrt(hhAccount) ~ hhTotal^2+inside+hhTotal^2*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model3bH)
head(nils)
model3bH <- lm(sqrt(hhAccount) ~ hhTotalSQ+inside+hhTotalSQ*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model3bH)
bptest(model3bH)
shapiro.test(model3bH$residuals)
model12a <- lm(sqrt(Accounts) ~ sqrtHHtotal+inside+sqrtHHtotal*inside, data=nils)
model12a <- lm(sqrt(hhAccount) ~ sqrtHHtotal+inside+sqrtHHtotal*inside, data=nils)
bptest(model12a)
summary(model12a)
hist(model12a$residuals)
shapiro.test(model12a$residuals)
shapiro.wilk(model12$residuals)
shapiro.test(model12$residuals)
summary(model1L)
plot(hhAccount~hhTotal, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
abline(model3bH)
summary(model3bH)
summary(model3aH)
model3bH <- lm(sqrt(hhAccount) ~ hhTotalSQ+inside+hhTotal+hhTotalSQ*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model3bH)
bptest(model3bH)
shapiro.test(model3bH$residuals)
model3bH <- lm(sqrt(hhAccount) ~ hhTotalSQ+inside+hhTotal+hhTotal*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model3bH)
bptest(model3bH)
#p = .003
shapiro.test(model3bH$residuals)
nils$hhTotalC <- nils$hhTotal - mean(nils$hhTotal)
nils$hhTotalCSq <- nils$hhTotalC^2
nilsLowPop <- data=subset(nils, hhTotal <69000 & hhAccount < 1400)
nilsLowPop <- data=subset(nils, hhTotal <69000 & hhAccount < 1400)
nilsLowPop$hhTotalC <- nilsLowPop$hhTotal - mean(nilsLowPop$hhTotal)
nilsLowPop <- subset(nils, hhTotal <69000 & hhAccount < 1400)
nilsLowPop$hhTotalC <- nilsLowPop$hhTotal - mean(nilsLowPop$hhTotal)
nilsLowPop$hhTotalCSq <- nilsLowPop$hhTotalC^2
model3cH <- lm(sqrt(hhAccount) ~ hhTotalCSq+inside+hhTotalC+hhTotalC*inside, data=nilsLowPop)
summary(model3cH)
bptest(model3cH)
shapiro.test(model3cH)
shapiro.test(model3cH)
str(nilsLowPop)
shapiro.test(model3cH$residuals)
model3dH <- lm(sqrt(hhAccount) ~ hhTotalCSq+inside+hhTotalC+hhTotalCSq*inside, data=nilsLowPop)
summary(model3dH)
bptest(model3dH)
shapiro.test(model3dH$residuals)
model1 <- lm(hhAccount~hhTotal+inside, data=nils)
summary(model1)
model2 <- lm(hhAccount~hhTotal+inside+hhTotal*inside, data=nils)
summary(model2)
shapiro.test(model2$residuals)
bptest(model2)
length(nils)
length(nils[1])
head(nils)
hist(hils$hhTotal)
hist(nils$hhTotal)
summary(nils$hhTotal)
summary(nils$hhAccount)
t(nils$hhAccount)
hist(nils$hhAccount)
summary(nils$inside)
corr(nils$hhAccount, nils$hhTotal)
cor(nils$hhAccount, nils$hhTotal)
cor(nils$hhTotal, nils$inside)
base <- lm(hhAccount~inside, data=nils)
summary(base)
bptest(base)
summary(model1)
summary(model4)
summary(model1)
summary(model2)
bptest(model2)
shapiro.test(model2$residuals)
model7 <- lm(log(hhAccount)~hhTotal+inside+hhTotal*inside, data=nils)
summary(model7)
bptest(model7)
shapiro.test(model7$residuals)
summary(model12)
bptest(model12)
shapiro.test(model12$residuals)
summary(model1L)
bptest(model1L)
shapiro.test(model1L$residuals)
model3dH <- lm(sqrt(hhAccount) ~ hhTotalCSq+inside+hhTotalC+hhTotalCSq*inside, data=nilsLowPop)
summary(model3dH)
bptest(model3dH)
shapiro.test(model3dH$residuals)
model3bH <- lm(sqrt(hhAccount) ~ hhTotalSQ+inside+hhTotal+hhTotal*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model3bH)
bptest(model3bH)
shapiro.test(model3bH$residuals)
model3bH <- lm(sqrt(hhAccount) ~ hhTotalSQ+inside+hhTotalSQ*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model3bH)
bptest(model3bH)
shapiro.test(model3bH$residuals)
model3OUTLIER <- lm(sqrt(hhAccount) ~ hhTotalSQ+inside+hhTotalSQ*inside, data=subset(nils, hhTotal <69000))
summary(model3OUTLIER)
min(nils$hhTotal)
hatvalues(model3OUTLIER)
hist(hatvalues(model3OUTLIER))
mean(hatvalues(model3OUTLIER))
max(hatvalues(model3OUTLIER))
?sorted
?sort
hvs <- sort(hatvalues(model3OUTLIER))
hvs
nils
max(nils$hhTotal)
lowData = seq(1700, 70000, by=25)
highData = seq(70000, 1800000, by=25)
outsideLow <- sapply(lowData, function(x){
insideLow <- sapply(lowData, function(x){
;
}
}
outsideLow <- sapply(lowData, function(x){
(15.4 + .00000000139*(x^2))^2
})
insideLow <- sapply(lowData, function(x){
(14.0 + .00000000468*(x^2))^2
})
outsideHigh <- sapply(highData, function(x){
698.1 + .0095*x
})
outsideLow <- sapply(highData, function(x){
613.0 + .02*x
})
plot(outsideLow)
nilsLow <- subset(nils, ID < 50)
nilsHigh <- subset(nils, ID >= 50)
plot(hhAccount~hhTotal, data=nilsLow)
plot(hhAccount~hhTotal, data=nilsHigh)
plot(hhAccount~hhTotal, data=nilsLow)
outsideLow <- cbind(outsideLow, nilsHigh$hhTotal)
len(outsideLow)
length(outsideLow)
length(nilsHigh$hhTotal)
outsideLow <- cbind(outsideLow, lowData)
length(lowData)
outsideLow <- sapply(lowData, function(x){
(15.4 + .00000000139*(x^2))^2
})
outsideLow <- cbind(outsideLow, lowData)
insideLow <- sapply(lowData, function(x){
(14.0 + .00000000468*(x^2))^2
})
insideLow <- cbind(insideLow, lowData)
outsideHigh <- sapply(highData, function(x){
698.1 + .0095*x
})
outsideHigh <- cbind(outsideHigh, highData)
insideHigh <- sapply(highData, function(x){
613.0 + .02*x
})
insideHigh <- cbind(insideHigh, highData)
plot(1~2, outsideLow)
names(outsideLow)
outsideLow
colnames(outsideLow) <- c("Predicted", "hhTotal")
outsideLow <- sapply(lowData, function(x){
(15.4 + .00000000139*(x^2))^2
})
outsideLow <- as.data.frame(cbind(outsideLow, lowData))
colnames(outsideLow) <- c("Predicted", "hhTotal")
insideLow <- sapply(lowData, function(x){
(14.0 + .00000000468*(x^2))^2
})
insideLow <- as.data.frame(cbind(insideLow, lowData))
colnames(insideLow) <- c("Predicted", "hhTotal")
outsideHigh <- sapply(highData, function(x){
698.1 + .0095*x
})
outsideHigh <- as.data.frame(cbind(outsideHigh, highData))
colnames(outsideHigh) <- c("Predicted", "hhTotal")
insideHigh <- sapply(highData, function(x){
613.0 + .02*x
})
insideHigh <- as.data.frame(cbind(insideHigh, highData))
colnames(insideHigh) <- c("Predicted", "hhTotal")
plot(Predicted~hhTotal, data=outsideLow)
plot(Predicted~hhTotal, data=insideLow)
model3 <- lm(hhAccount~inside, data=nils)
summary(model3)
bptest(model3)
shapiro.test(model3)
shapiro.test(model3$residuals)
model4 <- lm(percAccount~inside, data=nils)
summary(model4)
bptest(model4)
shapiro.test(model4$residuals)
summary(model2)
bptest(model2)
shapiro.test(model2$residuals)
model1 <- lm(hhAccount~hhTotal+inside, data=nils)
summary(model1)
bptest(model1)
shapiro.test(model1)
shapiro.test(model1$residuals)
summary(model7)
bptest(model7)
shapiro.test(model7)
shapiro.test(model7$residuals)
summary(model12)
bptest(model12)
shapiro.test(model12$residuals)
model1L <- lm(hhAccount ~ hhTotal+inside+hhTotal*inside,subset(nils, hhTotal >70000))
summary(model1L)
bptest(model1L)
shapiro.test(model1L)
shapiro.test(model1L$residuals)
model3FIN <- lm(sqrt(hhAccount) ~ hhTotalSQ+inside+hhTotalSQ*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model3bH)
bptest(model3bH)
summary(model3bFIN)
bptest(model3bFIN)
shapiro.test(model3FIN$residuals)
model3FIN <- lm(sqrt(hhAccount) ~ hhTotalSQ+inside+hhTotalSQ*inside, data=subset(nils, hhTotal <69000 & hhAccount < 1400))
summary(model3bFIN)
bptest(model3bFIN)
summary(model3FIN)
bptest(model3FIN)
shapiro.test(model3FIN$residuals)
library(rjson)
json_data <- fromJSON(file="averageTweetsByCandidate.json", method='C')
setwd("~/Desktop/MSAN/Module1/DataAq/project/main/TwitterCandidates")
json_data <- fromJSON(file="averageTweetsByCandidate.json", method='C')
json_data
json_data[[1]]
json_data[1]
names(json_data[1])
json_data[1][1]
names <- sapply(json_data, function(x){
names(x)
})
names
json_data[[1]]
names(json_data[1])
df <- as.data.frame(cbind(averages, names))
averages <- vector()
names <- vector()
for (i in 1:25 ) {
averages <- c(averages, json_data[[i]])
names <- c(names, json_data[i])
}
df <- as.data.frame(cbind(averages, names))
df
averages
names
json_data[1]
names(json_data[1])
names(json_data[[1]])
unlist(names(json_data[1]))
averages <- vector()
names <- vector()
for (i in 1:25 ) {
averages <- c(averages, json_data[[i]])
names <- c(names, unlist(names(json_data[i])))
}
df <- as.data.frame(cbind(averages, names))
df
df$names <- as.factor(df$names)
library(ggplot2)
ggplot(data=df, aes(x=names, y=averages) + geom_bar(stat="identity"))
df$averages <- as.numeric(df$averages)
ggplot(data=df, aes(x=names, y=averages) + geom_bar(stat="identity"))
ggplot(data=df, aes(x=names, y=averages)) + geom_bar(stat="identity")
parties <- c("D", "D", "R", "R", "R", "R", "R", "D", "R", "R", "R", "R", "D", "D", "D", "R", "D", "D", "R", "R", "D", "D", "R", "D", "I")
df <- cbind(df, parties)
df
averages <- vector()
names <- vector()
for (i in 1:25 ) {
averages <- c(averages, json_data[[i]])
names <- c(names, unlist(names(json_data[i])))
}
states <- c("AK", "GA", "NH", "LA", "NC", "MN", "AR", "MI", "GA", "IA", "MI", "LA", "KY", "NH", "AR", "KY", "CO", "IA", "AK", "KS", "MN", "NC", "CO", "LA", "KS")
averages <- vector()
names <- vector()
for (i in 1:25 ) {
averages <- c(averages, json_data[[i]])
names <- c(names, unlist(names(json_data[i])))
}
parties <- c("D", "D", "R", "R", "R", "R", "R", "D", "R", "R", "R", "R", "D", "D", "D", "R", "D", "D", "R", "R", "D", "D", "R", "D", "I")
states <- c("AK", "GA", "NH", "LA", "NC", "MN", "AR", "MI", "GA", "IA", "MI", "LA", "KY", "NH", "AR", "KY", "CO", "IA", "AK", "KS", "MN", "NC", "CO", "LA", "KS")
df <- as.data.frame(cbind(averages, names, parties, states))
df
df$averages
df$averages <- as.numeric(df$averages)
P_Ord <- df[order(df[,3]),]
P_Ord
S_Ord <- df[order(df[,4]),]
ggplot(data=P_Ord, aes(x=names, y=averages)) + geom_bar(aes(fill=parties), stat="identity")
averages <- vector()
names <- vector()
for (i in 1:25 ) {
averages <- c(averages, json_data[[i]])
names <- c(names, unlist(names(json_data[i])))
}
parties <- c("D", "D", "R", "R", "R", "R", "R", "D", "R", "R", "R", "R", "D", "D", "D", "R", "D", "D", "R", "R", "D", "D", "R", "D", "I")
states <- c("AK", "GA", "NH", "LA", "NC", "MN", "AR", "MI", "GA", "IA", "MI", "LA", "KY", "NH", "AR", "KY", "CO", "IA", "AK", "KS", "MN", "NC", "CO", "LA", "KS")
df <- as.data.frame(cbind(averages, names, parties, states))
df$averages <- as.numeric(df$averages)
P_Ord <- df[order(df[,3]),]
P_Ord$names <- as.factor(names, level=names(sort(df$averages), decreasing=TRUE))
P_Ord$names
P_Ord <- df[order(df[,3]),]
levels(P_Ord$names) <- P_Ord$names
S_Ord <- df[order(df[,4]),]
levels(S_Ord$names) <- S_Ord$names
ggplot(data=P_Ord, aes(x=names, y=averages)) + geom_bar(aes(fill=parties), stat="identity")
ggplot(data=S_Ord, aes(x=names, y=averages)) + geom_bar(aes(fill=states), stat="identity")
levels(P_Ord$names)
ggplot(data=P_Ord, aes(x=names, y=averages)) + geom_bar(aes(fill=parties), stat="identity")
averages <- vector()
names <- vector()
for (i in 1:25 ) {
averages <- c(averages, json_data[[i]])
names <- c(names, unlist(names(json_data[i])))
}
parties <- c("D", "D", "R", "R", "R", "R", "R", "D", "R", "R", "R", "R", "D", "D", "D", "R", "D", "D", "R", "R", "D", "D", "R", "D", "I")
states <- c("AK", "GA", "NH", "LA", "NC", "MN", "AR", "MI", "GA", "IA", "MI", "LA", "KY", "NH", "AR", "KY", "CO", "IA", "AK", "KS", "MN", "NC", "CO", "LA", "KS")
df <- as.data.frame(cbind(averages, names, parties, states))
df$averages <- as.numeric(df$averages)
df$names <- as.factor(df$names)
P_Ord <- df[order(df[,3]),]
P_Ord$namesP <- factor(P_Ord$names, as.character(P_Ord$names))
ggplot(data=P_Ord, aes(x=namesP, y=averages)) + geom_bar(aes(fill=parties), stat="identity")
averages <- vector()
names <- vector()
for (i in 1:25 ) {
averages <- c(averages, json_data[[i]])
names <- c(names, unlist(names(json_data[i])))
}
parties <- c("D", "D", "R", "R", "R", "R", "R", "D", "R", "R", "R", "R", "D", "D", "D", "R", "D", "D", "R", "R", "D", "D", "R", "D", "I")
states <- c("AK", "GA", "NH", "LA", "NC", "MN", "AR", "MI", "GA", "IA", "MI", "LA", "KY", "NH", "AR", "KY", "CO", "IA", "AK", "KS", "MN", "NC", "CO", "LA", "KS")
df <- as.data.frame(cbind(averages, names, parties, states))
df$averages <- as.numeric(df$averages)
P_Ord <- df[order(-df[,3]),]
df$names <- as.factor(df$names)
P_Ord <- df[order(-df[,3]),]
averages <- vector()
names <- vector()
for (i in 1:25 ) {
averages <- c(averages, json_data[[i]])
names <- c(names, unlist(names(json_data[i])))
}
parties <- c("D", "D", "R", "R", "R", "R", "R", "D", "R", "R", "R", "R", "D", "D", "D", "R", "D", "D", "R", "R", "D", "D", "R", "D", "I")
states <- c("AK", "GA", "NH", "LA", "NC", "MN", "AR", "MI", "GA", "IA", "MI", "LA", "KY", "NH", "AR", "KY", "CO", "IA", "AK", "KS", "MN", "NC", "CO", "LA", "KS")
df <- as.data.frame(cbind(averages, names, parties, states))
df$averages <- as.numeric(df$averages)
df$names <- as.factor(df$names)
P_Ord <- df[order(-df[,3]),]
df$names <- as.factor(df$names)
P_Ord <- df[order(df[,3]),]
P_Ord$namesP <- factor(P_Ord$names, -as.character(P_Ord$names))
P_Ord$namesP <- factor(P_Ord$names, as.character(- P_Ord$names))
averages <- vector()
names <- vector()
for (i in 1:25 ) {
averages <- c(averages, json_data[[i]])
names <- c(names, unlist(names(json_data[i])))
}
parties <- c("D", "D", "R", "R", "R", "R", "R", "D", "R", "R", "R", "R", "D", "D", "D", "R", "D", "D", "R", "R", "D", "D", "R", "D", "I")
states <- c("AK", "GA", "NH", "LA", "NC", "MN", "AR", "MI", "GA", "IA", "MI", "LA", "KY", "NH", "AR", "KY", "CO", "IA", "AK", "KS", "MN", "NC", "CO", "LA", "KS")
df <- as.data.frame(cbind(averages, names, parties, states))
df$averages <- as.numeric(df$averages)
df$names <- as.character(df$names)
P_Ord <- df[order(-df[,3]),]
S_Ord <- df[order(df[,4]),]
S_Ord <- df[order(df[,4]),]
S_Ord$namesS <- factor(S_Ord$names, as.character(S_Ord$names))
ggplot(data=S_Ord, aes(x=names, y=averages)) + geom_bar(aes(fill=states), stat="identity")
S_Ord <- df[order(df[,4]),]
ggplot(data=S_Ord, aes(x=namesS, y=averages)) + geom_bar(aes(fill=states), stat="identity")
S_Ord$namesS <- factor(S_Ord$names, as.character(S_Ord$names))
S_Ord
ggplot(data=S_Ord, aes(x=namesS, y=averages)) + geom_bar(aes(fill=states), stat="identity")
ggplot(data=S_Ord, aes(x=namesS, y=averages)) + geom_bar(aes(fill=states), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(data=P_Ord, aes(x=namesP, y=averages)) + geom_bar(aes(fill=parties), stat="identity")
+ theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
P_Ord <- df[order(-df[,3]),]
averages <- vector()
names <- vector()
for (i in 1:25 ) {
averages <- c(averages, json_data[[i]])
names <- c(names, unlist(names(json_data[i])))
}
parties <- c("D", "D", "R", "R", "R", "R", "R", "D", "R", "R", "R", "R", "D", "D", "D", "R", "D", "D", "R", "R", "D", "D", "R", "D", "I")
states <- c("AK", "GA", "NH", "LA", "NC", "MN", "AR", "MI", "GA", "IA", "MI", "LA", "KY", "NH", "AR", "KY", "CO", "IA", "AK", "KS", "MN", "NC", "CO", "LA", "KS")
df <- as.data.frame(cbind(averages, names, parties, states))
df$averages <- as.numeric(df$averages)
df$names <- as.character(df$names)
P_Ord <- df[order(-df[,3]),]
df
P_Ord <- df[order(df[,3]),]
df$names <- as.factor(df$names)
P_Ord$namesP <- factor(P_Ord$names, as.character(P_Ord$names))
ggplot(data=P_Ord, aes(x=namesP, y=averages)) + geom_bar(aes(fill=parties), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day")
df <- as.data.frame(cbind(averages, names, parties, states))
df$averages <- as.numeric(df$averages)
df$names <- as.character(df$names)
df$parties <- as.character(df$parties)
P_Ord <- df[order(-df[,3]),]
df <- as.data.frame(cbind(averages, names, parties, states))
df$averages <- as.numeric(df$averages)
df$names <- as.character(df$names)
df$parties <- as.character(df$parties)
P_Ord <- df[order(df[,3]), decreasing=TRUE]
df <- as.data.frame(cbind(averages, names, parties, states))
df$averages <- as.numeric(df$averages)
df$names <- as.character(df$names)
df$parties <- as.character(df$parties)
P_Ord <- df[order(df[,3], decreasing=TRUE), ]
P_Ord$parties <- as.factor(P_Ord$parties)
df$names <- as.factor(df$names)
P_Ord$namesP <- factor(P_Ord$names, as.character(P_Ord$names))
ggplot(data=P_Ord, aes(x=namesP, y=averages)) + geom_bar(aes(fill=parties), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day")
partyPalette <- c("061ED4", "DE1C07", "01941C")
ggplot(data=P_Ord, aes(x=namesP, y=averages)) + geom_bar(aes(fill=parties), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + scale_fill_brewer(palette=partyPalette)
ggplot(data=P_Ord, aes(x=namesP, y=averages)) + geom_bar(aes(fill=parties), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + scale_fill_manual(values=partyPalette)
partyPalette <- c("#061ED4", "#DE1C07", "#01941C")
ggplot(data=P_Ord, aes(x=namesP, y=averages)) + geom_bar(aes(fill=parties), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + scale_fill_manual(values=partyPalette)
partyPalette <- c("#061ED4","#01941C", "#DE1C07")
ggplot(data=P_Ord, aes(x=namesP, y=averages)) + geom_bar(aes(fill=parties), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + scale_fill_manual(values=partyPalette)
S_Ord <- df[order(df[,4]),]
S_Ord$namesS <- factor(S_Ord$names, as.character(S_Ord$names))
ggplot(data=S_Ord, aes(x=namesS, y=averages)) + geom_bar(aes(fill=states), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + scale_fill_brewer(palette="Set3")
ggplot(data=S_Ord, aes(x=namesS, y=averages)) + geom_bar(aes(fill=states), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + scale_fill_brewer(palette="Dark2")
ggplot(data=S_Ord, aes(x=namesS, y=averages)) + geom_bar(aes(fill=states), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + scale_fill_brewer(palette="Paired")
df
df <- as.data.frame(cbind(averages, names, parties, states))
df$averages <- as.numeric(df$averages)
df$names <- as.character(df$names)
df$parties <- as.character(df$parties)
partyPalette <- c("#061ED4","#01941C", "#DE1C07")
P_Ord <- df[order(df[,3], df[,1], decreasing=TRUE), ]
P_Ord$parties <- as.factor(P_Ord$parties)
df$names <- as.factor(df$names)
P_Ord$namesP <- factor(P_Ord$names, as.character(P_Ord$names))
ggplot(data=P_Ord, aes(x=namesP, y=averages)) + geom_bar(aes(fill=parties), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + ggtitle("Tweet Volume By Party") + scale_fill_manual(values=partyPalette)
S_Ord <- df[order(df[,4], df[,1]),]
S_Ord$namesS <- factor(S_Ord$names, as.character(S_Ord$names))
ggplot(data=S_Ord, aes(x=namesS, y=averages)) + geom_bar(aes(fill=states), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + ggtitle("Tweet Volume By State")+  scale_fill_brewer(palette="Paired")
parties <- c("D", "D", "R", "R", "R", "R", "R", "D", "R", "R", "R", "R", "D", "D", "D", "R", "D", "D", "R", "R", "D", "D", "R", "D", "I")
states <- c("AK", "GA", "NH", "LA", "NC", "MN", "AR", "MI", "GA", "IA", "MI", "LA", "KY", "NH", "AR", "KY", "CO", "IA", "AK", "KS", "MN", "NC", "CO", "LA", "KS")
df <- as.data.frame(cbind(averages, names, parties, states))
df$averages <- as.numeric(df$averages)
df$names <- as.character(df$names)
df$parties <- as.character(df$parties)
partyPalette <- c("#061ED4","#01941C", "#DE1C07")
P_Ord <- df[order(df[,3], -df[,1], decreasing=TRUE), ]
P_Ord$parties <- as.factor(P_Ord$parties)
df$names <- as.factor(df$names)
P_Ord$namesP <- factor(P_Ord$names, as.character(P_Ord$names))
ggplot(data=P_Ord, aes(x=namesP, y=averages)) + geom_bar(aes(fill=parties), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + ggtitle("Tweet Volume By Party") + scale_fill_manual(values=partyPalette)
S_Ord <- df[order(df[,4], -df[,1]),]
S_Ord$namesS <- factor(S_Ord$names, as.character(S_Ord$names))
ggplot(data=S_Ord, aes(x=namesS, y=averages)) + geom_bar(aes(fill=states), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + ggtitle("Tweet Volume By State")+  scale_fill_brewer(palette="Paired")
parties <- c("D", "D", "R", "R", "R", "R", "R", "D", "R", "R", "R", "R", "D", "D", "D", "R", "D", "D", "R", "R", "D", "D", "R", "D", "I")
states <- c("AK", "GA", "NH", "LA", "NC", "MN", "AR", "MI", "GA", "IA", "MI", "LA", "KY", "NH", "AR", "KY", "CO", "IA", "AK", "KS", "MN", "NC", "CO", "LA", "KS")
df <- as.data.frame(cbind(averages, names, parties, states))
df$averages <- as.numeric(df$averages)
df$names <- as.character(df$names)
df$parties <- as.character(df$parties)
partyPalette <- c("#061ED4","#01941C", "#DE1C07")
P_Ord <- df[order(df[,3], df[,1], decreasing=TRUE), ]
P_Ord$parties <- as.factor(P_Ord$parties)
df$names <- as.factor(df$names)
P_Ord$namesP <- factor(P_Ord$names, as.character(P_Ord$names))
ggplot(data=P_Ord, aes(x=namesP, y=averages)) + geom_bar(aes(fill=parties), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + ggtitle("Tweet Volume By Party") + scale_fill_manual(values=partyPalette)
S_Ord <- df[order(df[,4], df[,1]),]
S_Ord$namesS <- factor(S_Ord$names, as.character(S_Ord$names))
ggplot(data=S_Ord, aes(x=namesS, y=averages)) + geom_bar(aes(fill=states), stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + xlab("Candidate Names") + ylab("Average Tweets Per Day") + ggtitle("Tweet Volume By State")+  scale_fill_brewer(palette="Paired")
